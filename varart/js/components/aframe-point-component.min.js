!function(e){function t(o){if(i[o])return i[o].exports;var s=i[o]={exports:{},id:o,loaded:!1};return e[o].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("point",{schema:{color:{type:"color",default:"#888"},size:{type:"number",default:1},perspective:{type:"boolean",default:!1}},multiple:!1,init:function(){this.geometry=new THREE.Geometry,this.geometry.vertices.push(new THREE.Vector3(0,0,0)),this.material=new THREE.PointsMaterial({color:this.data.color,size:this.data.size,sizeAttenuation:this.data.perspective}),this.points=new THREE.Points(this.geometry,this.material),this.el.setObject3D("mesh",this.points)},setPoints:function(e){this.geometry=new THREE.Geometry;var t=this.geometry.vertices;e.forEach(function(e){t.push(new THREE.Vector3(e[0],e[1],e[2]))}),this.points=new THREE.Points(this.geometry,this.material),this.el.setObject3D("mesh",this.points)},remove:function(){this.el.removeObject3D("mesh")}}),AFRAME.registerPrimitive("a-point",{defaultComponents:{point:{}},mappings:{color:"point.color",size:"point.size",perspective:"point.perspective"}})}]);